---
import Plus from "@/components/icons/Plus.astro"
---

<footer>
  <div class="circle">
    <span>
      <Plus />
    </span>
  </div>
  
  <div class="overlay">
    <!-- Overlay para el formulario -->
  </div>

  <div class="form-container">
    <form id="creation-form">
      <h3>Crear nuevo elemento</h3>
      <div class="form-group">
        <label for="title">Título</label>
        <input type="text" id="title" name="title" required>
      </div>
      <div class="form-group">
        <label for="description">Descripción</label>
        <textarea id="description" name="description" rows="3"></textarea>
      </div>
      <div class="form-actions">
        <button type="submit" class="submit-btn">Guardar</button>
        <button type="button" class="cancel-btn">Cancelar</button>
      </div>
    </form>
  </div>
</footer>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const circleButton = document.querySelector('.circle');
    const formContainer = document.querySelector('.form-container');
    const overlay = document.querySelector('.overlay');
    const cancelBtn = document.querySelector('.cancel-btn');
    
    if (!circleButton || !formContainer || !overlay) {
      console.error('Elementos requeridos no encontrados');
      return;
    }
    
    const showForm = () => {
      formContainer.classList.add('active');
      overlay.classList.add('active');
      document.body.style.overflow = 'hidden'; // Prevenir scroll
    };
    
    const hideForm = () => {
      formContainer.classList.remove('active');
      overlay.classList.remove('active');
      document.body.style.overflow = ''; // Restaurar scroll
    };
    
    // Mostrar formulario al hacer clic en el botón
    circleButton.addEventListener('click', showForm);
    
    // Ocultar formulario al hacer clic fuera del formulario
    overlay.addEventListener('click', hideForm);
    
    // Ocultar formulario al hacer clic en el botón cancelar
    if (cancelBtn) {
      cancelBtn.addEventListener('click', (e) => {
        hideForm();
      });
    }
    
    // Evitar que los clics en el formulario se propaguen
    formContainer.addEventListener('click', (e) => {
      e.stopPropagation();
    });
    
    // Capturar la información del formulario al enviar
    const form = document.getElementById('creation-form') as HTMLFormElement;
    if (form) {
      form.addEventListener('submit', (e) => {
        e.preventDefault();
        
        // Obtener los valores del formulario con comprobación de tipo
        const titleElement = document.getElementById('title') as HTMLInputElement;
        const descriptionElement = document.getElementById('description') as HTMLTextAreaElement;
        
        if (titleElement && descriptionElement) {
          const title = titleElement.value;
          const description = descriptionElement.value;
          
          // Mostrar los valores en la consola
          console.log('Datos del formulario:');
          console.log({ title, description });
          
          // Cerrar el formulario después de enviar
          hideForm();
          
          // Opcional: Limpiar el formulario
          form.reset();
        }
      });
    }
  });
</script>

<style>
  footer {
    position: fixed;
    bottom: 2rem;
    right: max(2rem, calc((100vw - 1100px) / 2 + 2rem));
    z-index: 1000;
  }
  .circle {
    width: 4rem;
    height: 4rem;
    background-color: #a64472;
    border-radius: 50%;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .circle span {
    width: 1.5rem;
    height: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .circle :global(svg) {
    width: 100%;
    height: 100%;
  }

  .circle :global(svg path) {
    stroke: white;
    stroke-width: 2.5;
  }

  /* Estilos para el formulario */
  .form-container {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.95);
    width: 400px;
    max-width: 90%;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
    padding: 1.5rem;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 999;
  }

  .form-container.active {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
    visibility: visible;
  }

  .form-container h3 {
    margin-top: 0;
    margin-bottom: 1rem;
    color: #333;
    font-size: 1.2rem;
    font-weight: 600;
  }

  .form-group {
    margin-bottom: 1rem;
  }

  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-size: 0.9rem;
    color: #555;
  }

  .form-group input,
  .form-group textarea {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 0.9rem;
    transition: border-color 0.2s;
  }

  .form-group input:focus,
  .form-group textarea:focus {
    border-color: #a64472;
    outline: none;
  }

  .form-actions {
    display: flex;
    justify-content: flex-end;
    gap: 0.75rem;
    margin-top: 1.5rem;
  }

  button {
    padding: 0.6rem 1rem;
    border: none;
    border-radius: 4px;
    font-size: 0.9rem;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .submit-btn {
    background-color: #a64472;
    color: white;
  }

  .submit-btn:hover {
    background-color: #8e3861;
  }

  .cancel-btn {
    background-color: #f0f0f0;
    color: #333;
  }

  .cancel-btn:hover {
    background-color: #e0e0e0;
  }
  
  /* Overlay semi-transparente */
  .overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 998;
    display: none;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .overlay.active {
    display: block;
    opacity: 1;
  }
</style>
